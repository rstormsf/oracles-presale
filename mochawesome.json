{
  "stats": {
    "suites": 7,
    "tests": 23,
    "passes": 23,
    "pending": 0,
    "failures": 0,
    "start": "2018-03-31T01:14:38.433Z",
    "end": "2018-03-31T01:14:41.908Z",
    "duration": 3475,
    "testsRegistered": 23,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "PresaleOraclesMock",
        "suites": [],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "uuid": "99fa4326-00d7-455c-bda4-4484c99b8d75",
        "beforeHooks": [
          {
            "title": "\"before all\" hook: prepare suite",
            "fullTitle": "PresaleOraclesMock \"before all\" hook: prepare suite",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "series([\n  runner.initialize.bind(runner),\n  self.compileNewAbstractInterface.bind(this, runner),\n  self.deployTestDependencies.bind(this, abstraction, dependency_paths, runner)\n], done);",
            "err": {},
            "isRoot": false,
            "uuid": "f8f9d19d-e710-45eb-a97c-66dffb7ce8d2",
            "parentUUID": "99fa4326-00d7-455c-bda4-4484c99b8d75",
            "isHook": true,
            "skipped": false
          },
          {
            "title": "\"before each\" hook: before test",
            "fullTitle": "PresaleOraclesMock \"before each\" hook: before test",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "runner.startTest(this, done);",
            "err": {},
            "isRoot": false,
            "uuid": "9adc0f26-2e9f-48f9-b90c-9c448ff7e0fd",
            "parentUUID": "99fa4326-00d7-455c-bda4-4484c99b8d75",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [
          {
            "title": "\"after each\" hook: after test",
            "fullTitle": "PresaleOraclesMock \"after each\" hook: after test",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "runner.endTest(this, done);",
            "err": {},
            "isRoot": false,
            "uuid": "f0f109af-5bc1-4b9d-9037-8edca86d043d",
            "parentUUID": "99fa4326-00d7-455c-bda4-4484c99b8d75",
            "isHook": true,
            "skipped": false
          }
        ],
        "fullFile": "",
        "file": "",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasBeforeHooks": true,
        "hasAfterHooks": true,
        "hasTests": false,
        "hasSuites": false,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "Contract: Presale",
        "suites": [
          {
            "title": "#initilize",
            "suites": [],
            "tests": [
              {
                "title": "rejects if not sent by owner",
                "fullTitle": "Contract: Presale #initilize rejects if not sent by owner",
                "timedOut": false,
                "duration": 37,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "async \n            await presaleContract.initialize(PRESALE_START_DATE, PRESALE_END_DATE, ETHER.mul(40000), ETHER.mul(100), accounts[1], {from: accounts[1]})\n                .should.be.rejectedWith(REVERT_MSG);",
                "err": {},
                "isRoot": false,
                "uuid": "a84dddec-cd4a-42be-b40d-5cac9a6312a5",
                "parentUUID": "43c23c6b-aaf2-4392-9598-99d200e064ab",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "sets values",
                "fullTitle": "Contract: Presale #initilize sets values",
                "timedOut": false,
                "duration": 166,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "async \n            await presaleContract.initialize(PRESALE_START_DATE, PRESALE_END_DATE, ETHER.mul(40000), ETHER.mul(100), accounts[1], {from: accounts[0]})\n            true.should.be.equal(\n                await presaleContract.isInitialized()\n            )\n            PRESALE_START_DATE.should.be.bignumber.equal(\n                await presaleContract.startTime()\n            )\n            PRESALE_END_DATE.should.be.bignumber.equal(\n                await presaleContract.endTime()\n            )\n            ETHER.mul(40000).should.be.bignumber.equal(\n                await presaleContract.cap()\n            )\n            accounts[1].should.be.equal(\n                await presaleContract.vault()\n            )\n            ETHER.mul(100).should.be.bignumber.equal(\n                await presaleContract.minimumContribution()\n            )",
                "err": {},
                "isRoot": false,
                "uuid": "f00eeed2-1aef-4cf6-80c6-404e4cb818ff",
                "parentUUID": "43c23c6b-aaf2-4392-9598-99d200e064ab",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "cannot initialize twice",
                "fullTitle": "Contract: Presale #initilize cannot initialize twice",
                "timedOut": false,
                "duration": 85,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "async \n            // require(!isInitialized);\n            await presaleContract.initialize(PRESALE_START_DATE, PRESALE_END_DATE, ETHER.mul(40000), ETHER.mul(100), accounts[1], {from: accounts[0]})\n            await presaleContract.initialize(PRESALE_START_DATE, PRESALE_END_DATE, ETHER.mul(40000), ETHER.mul(100), accounts[1], {from: accounts[0]})\n                .should.be.rejectedWith(REVERT_MSG);",
                "err": {},
                "isRoot": false,
                "uuid": "4b102265-49b9-4e8d-a369-dad4d0e75084",
                "parentUUID": "43c23c6b-aaf2-4392-9598-99d200e064ab",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "startTime cannot be 0",
                "fullTitle": "Contract: Presale #initilize startTime cannot be 0",
                "timedOut": false,
                "duration": 30,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "async \n            // require(_startTime != 0);\n            await presaleContract.initialize(0, PRESALE_END_DATE, ETHER.mul(40000), ETHER.mul(100), accounts[1], {from: accounts[1]})\n            .should.be.rejectedWith(REVERT_MSG);",
                "err": {},
                "isRoot": false,
                "uuid": "13e16b47-e389-4f83-8b32-45a3319690b6",
                "parentUUID": "43c23c6b-aaf2-4392-9598-99d200e064ab",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "endTime cannot be 0",
                "fullTitle": "Contract: Presale #initilize endTime cannot be 0",
                "timedOut": false,
                "duration": 34,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "async \n            // require(_endTime != 0);\n            await presaleContract.initialize(PRESALE_START_DATE, 0, ETHER.mul(40000), ETHER.mul(100), accounts[1], {from: accounts[1]})\n            .should.be.rejectedWith(REVERT_MSG);",
                "err": {},
                "isRoot": false,
                "uuid": "f10d12ab-fe76-4242-921f-369ca36405f7",
                "parentUUID": "43c23c6b-aaf2-4392-9598-99d200e064ab",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "endTime cannot be less than startTime",
                "fullTitle": "Contract: Presale #initilize endTime cannot be less than startTime",
                "timedOut": false,
                "duration": 22,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "async \n            // require(_endTime > _startTime);\n            await presaleContract.initialize(PRESALE_END_DATE, PRESALE_START_DATE, ETHER.mul(40000), ETHER.mul(100), accounts[1], {from: accounts[1]})\n            .should.be.rejectedWith(REVERT_MSG);",
                "err": {},
                "isRoot": false,
                "uuid": "28c814d5-52ad-4bc0-9aea-ccd00a294968",
                "parentUUID": "43c23c6b-aaf2-4392-9598-99d200e064ab",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "cap cannot be 0",
                "fullTitle": "Contract: Presale #initilize cap cannot be 0",
                "timedOut": false,
                "duration": 25,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "async \n            // require(_cap != 0);\n            await presaleContract.initialize(PRESALE_START_DATE, PRESALE_END_DATE, 0, ETHER.mul(100), accounts[1], {from: accounts[1]})\n            .should.be.rejectedWith(REVERT_MSG);",
                "err": {},
                "isRoot": false,
                "uuid": "91c8f7b9-8e53-4667-80e5-abeeedfd2407",
                "parentUUID": "43c23c6b-aaf2-4392-9598-99d200e064ab",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "vault cannot be 0x0",
                "fullTitle": "Contract: Presale #initilize vault cannot be 0x0",
                "timedOut": false,
                "duration": 31,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "async \n            // require(_vault != 0x0);\n            await presaleContract.initialize(PRESALE_START_DATE, PRESALE_END_DATE, ETHER.mul(40000), ETHER.mul(100), '0x0', {from: accounts[1]})\n            .should.be.rejectedWith(REVERT_MSG);",
                "err": {},
                "isRoot": false,
                "uuid": "4060402c-dffa-42a3-9003-88865a335102",
                "parentUUID": "43c23c6b-aaf2-4392-9598-99d200e064ab",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "minimumContribution cannot be 0",
                "fullTitle": "Contract: Presale #initilize minimumContribution cannot be 0",
                "timedOut": false,
                "duration": 30,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "async \n            // require(_vault != 0x0);\n            await presaleContract.initialize(PRESALE_START_DATE, PRESALE_END_DATE, ETHER.mul(40000), 0, accounts[1], {from: accounts[1]})\n            .should.be.rejectedWith(REVERT_MSG);",
                "err": {},
                "isRoot": false,
                "uuid": "adb20fa6-83f6-47fb-b375-d28e3469eb7c",
                "parentUUID": "43c23c6b-aaf2-4392-9598-99d200e064ab",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 300000,
            "file": "/test/presale.js",
            "uuid": "43c23c6b-aaf2-4392-9598-99d200e064ab",
            "beforeHooks": [
              {
                "title": "\"before each\" hook",
                "fullTitle": "Contract: Presale #initilize \"before each\" hook",
                "timedOut": false,
                "duration": 1,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "PRESALE_START_DATE = moment('2017-12-11T16:00:00Z').unix();\nPRESALE_END_DATE = moment('2017-12-18T16:00:00Z').unix();",
                "err": {},
                "isRoot": false,
                "uuid": "984bea1d-6d1a-43a3-885a-79378a875ea5",
                "parentUUID": "43c23c6b-aaf2-4392-9598-99d200e064ab",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "fullFile": "/home/travis/build/rstormsf/oracles-presale/test/presale.js",
            "passes": [
              {
                "title": "rejects if not sent by owner",
                "fullTitle": "Contract: Presale #initilize rejects if not sent by owner",
                "timedOut": false,
                "duration": 37,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "async \n            await presaleContract.initialize(PRESALE_START_DATE, PRESALE_END_DATE, ETHER.mul(40000), ETHER.mul(100), accounts[1], {from: accounts[1]})\n                .should.be.rejectedWith(REVERT_MSG);",
                "err": {},
                "isRoot": false,
                "uuid": "a84dddec-cd4a-42be-b40d-5cac9a6312a5",
                "parentUUID": "43c23c6b-aaf2-4392-9598-99d200e064ab",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "sets values",
                "fullTitle": "Contract: Presale #initilize sets values",
                "timedOut": false,
                "duration": 166,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "async \n            await presaleContract.initialize(PRESALE_START_DATE, PRESALE_END_DATE, ETHER.mul(40000), ETHER.mul(100), accounts[1], {from: accounts[0]})\n            true.should.be.equal(\n                await presaleContract.isInitialized()\n            )\n            PRESALE_START_DATE.should.be.bignumber.equal(\n                await presaleContract.startTime()\n            )\n            PRESALE_END_DATE.should.be.bignumber.equal(\n                await presaleContract.endTime()\n            )\n            ETHER.mul(40000).should.be.bignumber.equal(\n                await presaleContract.cap()\n            )\n            accounts[1].should.be.equal(\n                await presaleContract.vault()\n            )\n            ETHER.mul(100).should.be.bignumber.equal(\n                await presaleContract.minimumContribution()\n            )",
                "err": {},
                "isRoot": false,
                "uuid": "f00eeed2-1aef-4cf6-80c6-404e4cb818ff",
                "parentUUID": "43c23c6b-aaf2-4392-9598-99d200e064ab",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "cannot initialize twice",
                "fullTitle": "Contract: Presale #initilize cannot initialize twice",
                "timedOut": false,
                "duration": 85,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "async \n            // require(!isInitialized);\n            await presaleContract.initialize(PRESALE_START_DATE, PRESALE_END_DATE, ETHER.mul(40000), ETHER.mul(100), accounts[1], {from: accounts[0]})\n            await presaleContract.initialize(PRESALE_START_DATE, PRESALE_END_DATE, ETHER.mul(40000), ETHER.mul(100), accounts[1], {from: accounts[0]})\n                .should.be.rejectedWith(REVERT_MSG);",
                "err": {},
                "isRoot": false,
                "uuid": "4b102265-49b9-4e8d-a369-dad4d0e75084",
                "parentUUID": "43c23c6b-aaf2-4392-9598-99d200e064ab",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "startTime cannot be 0",
                "fullTitle": "Contract: Presale #initilize startTime cannot be 0",
                "timedOut": false,
                "duration": 30,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "async \n            // require(_startTime != 0);\n            await presaleContract.initialize(0, PRESALE_END_DATE, ETHER.mul(40000), ETHER.mul(100), accounts[1], {from: accounts[1]})\n            .should.be.rejectedWith(REVERT_MSG);",
                "err": {},
                "isRoot": false,
                "uuid": "13e16b47-e389-4f83-8b32-45a3319690b6",
                "parentUUID": "43c23c6b-aaf2-4392-9598-99d200e064ab",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "endTime cannot be 0",
                "fullTitle": "Contract: Presale #initilize endTime cannot be 0",
                "timedOut": false,
                "duration": 34,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "async \n            // require(_endTime != 0);\n            await presaleContract.initialize(PRESALE_START_DATE, 0, ETHER.mul(40000), ETHER.mul(100), accounts[1], {from: accounts[1]})\n            .should.be.rejectedWith(REVERT_MSG);",
                "err": {},
                "isRoot": false,
                "uuid": "f10d12ab-fe76-4242-921f-369ca36405f7",
                "parentUUID": "43c23c6b-aaf2-4392-9598-99d200e064ab",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "endTime cannot be less than startTime",
                "fullTitle": "Contract: Presale #initilize endTime cannot be less than startTime",
                "timedOut": false,
                "duration": 22,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "async \n            // require(_endTime > _startTime);\n            await presaleContract.initialize(PRESALE_END_DATE, PRESALE_START_DATE, ETHER.mul(40000), ETHER.mul(100), accounts[1], {from: accounts[1]})\n            .should.be.rejectedWith(REVERT_MSG);",
                "err": {},
                "isRoot": false,
                "uuid": "28c814d5-52ad-4bc0-9aea-ccd00a294968",
                "parentUUID": "43c23c6b-aaf2-4392-9598-99d200e064ab",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "cap cannot be 0",
                "fullTitle": "Contract: Presale #initilize cap cannot be 0",
                "timedOut": false,
                "duration": 25,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "async \n            // require(_cap != 0);\n            await presaleContract.initialize(PRESALE_START_DATE, PRESALE_END_DATE, 0, ETHER.mul(100), accounts[1], {from: accounts[1]})\n            .should.be.rejectedWith(REVERT_MSG);",
                "err": {},
                "isRoot": false,
                "uuid": "91c8f7b9-8e53-4667-80e5-abeeedfd2407",
                "parentUUID": "43c23c6b-aaf2-4392-9598-99d200e064ab",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "vault cannot be 0x0",
                "fullTitle": "Contract: Presale #initilize vault cannot be 0x0",
                "timedOut": false,
                "duration": 31,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "async \n            // require(_vault != 0x0);\n            await presaleContract.initialize(PRESALE_START_DATE, PRESALE_END_DATE, ETHER.mul(40000), ETHER.mul(100), '0x0', {from: accounts[1]})\n            .should.be.rejectedWith(REVERT_MSG);",
                "err": {},
                "isRoot": false,
                "uuid": "4060402c-dffa-42a3-9003-88865a335102",
                "parentUUID": "43c23c6b-aaf2-4392-9598-99d200e064ab",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "minimumContribution cannot be 0",
                "fullTitle": "Contract: Presale #initilize minimumContribution cannot be 0",
                "timedOut": false,
                "duration": 30,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "async \n            // require(_vault != 0x0);\n            await presaleContract.initialize(PRESALE_START_DATE, PRESALE_END_DATE, ETHER.mul(40000), 0, accounts[1], {from: accounts[1]})\n            .should.be.rejectedWith(REVERT_MSG);",
                "err": {},
                "isRoot": false,
                "uuid": "adb20fa6-83f6-47fb-b375-d28e3469eb7c",
                "parentUUID": "43c23c6b-aaf2-4392-9598-99d200e064ab",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasBeforeHooks": true,
            "hasAfterHooks": false,
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 9,
            "totalPasses": 9,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 460,
            "rootEmpty": false
          },
          {
            "title": "#buy",
            "suites": [],
            "tests": [
              {
                "title": "cannot buy if not whitelisted",
                "fullTitle": "Contract: Presale #buy cannot buy if not whitelisted",
                "timedOut": false,
                "duration": 16,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "async \n            // require(whitelist[msg.sender]);\n            await presaleContract.sendTransaction({amount: ETHER})\n            .should.be.rejectedWith(REVERT_MSG);",
                "err": {},
                "isRoot": false,
                "uuid": "a9e0c56b-8a73-4105-b3ca-c7da95f5bbbf",
                "parentUUID": "4d46b253-b02f-44a9-9a97-4cfc8142ea68",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "cannot buy if not value is 0",
                "fullTitle": "Contract: Presale #buy cannot buy if not value is 0",
                "timedOut": false,
                "duration": 40,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "async \n            // require(msg.value > 0);\n            await presaleContract.setTime(PRESALE_START_DATE);\n            await presaleContract.sendTransaction({value: 0})\n            .should.be.rejectedWith(REVERT_MSG);",
                "err": {},
                "isRoot": false,
                "uuid": "9b671b37-652e-4b9e-8ed3-40867c5f83bb",
                "parentUUID": "4d46b253-b02f-44a9-9a97-4cfc8142ea68",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "cannot buy if not value is less than minimum",
                "fullTitle": "Contract: Presale #buy cannot buy if not value is less than minimum",
                "timedOut": false,
                "duration": 51,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "async \n            // require(msg.value > 0);\n            await presaleContract.setTime(PRESALE_START_DATE);\n            await presaleContract.sendTransaction({value: ETHER.mul(99)})\n            .should.be.rejectedWith(REVERT_MSG);",
                "err": {},
                "isRoot": false,
                "uuid": "aff9c839-5822-4b07-8ba4-ab77bd196ce9",
                "parentUUID": "4d46b253-b02f-44a9-9a97-4cfc8142ea68",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "can not buy if time is not within startTime&endTime",
                "fullTitle": "Contract: Presale #buy can not buy if time is not within startTime&endTime",
                "timedOut": false,
                "duration": 107,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "async \n            // require(now >= startTime && now <= endTime);\n            await presaleContract.setTime(PRESALE_START_DATE - 1);\n            await presaleContract.sendTransaction({value: ETHER.mul(100)})\n            .should.be.rejectedWith(REVERT_MSG);\n            await presaleContract.setTime(PRESALE_END_DATE + 1);\n            await presaleContract.sendTransaction({value: ETHER.mul(100)})\n            .should.be.rejectedWith(REVERT_MSG);",
                "err": {},
                "isRoot": false,
                "uuid": "2d69ea6d-6c26-4f6d-a952-d6552d83a815",
                "parentUUID": "4d46b253-b02f-44a9-9a97-4cfc8142ea68",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "can not buy more than cap",
                "fullTitle": "Contract: Presale #buy can not buy more than cap",
                "timedOut": false,
                "duration": 52,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "async \n            // bool withinCap = totalInvestedInWei.add(msg.value) <= cap;\n            await presaleContract.setTime(PRESALE_START_DATE);\n            await presaleContract.sendTransaction({value: ETHER.mul(40000).add(1)})\n            .should.be.rejectedWith(REVERT_MSG);",
                "err": {},
                "isRoot": false,
                "uuid": "10d13d4e-9332-4d04-bc9b-9f63642dc6e4",
                "parentUUID": "4d46b253-b02f-44a9-9a97-4cfc8142ea68",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "happy path",
                "fullTitle": "Contract: Presale #buy happy path",
                "timedOut": false,
                "duration": 727,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "async \n            // investorBalances[investor] += msg.value;\n            // totalInvestedInWei += msg.value;\n            // forwardFunds(msg.value);\n            const vault = accounts[1];\n            const preVaultBalance = await web3.eth.getBalance(vault);\n            await presaleContract.setTime(PRESALE_START_DATE);\n            await presaleContract.whitelistInvestor(accounts[0]);            \n            await presaleContract.sendTransaction({value: ETHER.mul(100)});\n            ETHER.mul(100).should.be.bignumber.equal(\n                await presaleContract.investorBalances(accounts[0])\n            )\n            ETHER.mul(100).should.be.bignumber.equal(\n                await presaleContract.totalInvestedInWei()\n            )\n            preVaultBalance.add(ETHER.mul(100)).should.be.bignumber.equal(\n                await web3.eth.getBalance(vault)\n            )\n            await presaleContract.sendTransaction({value: ETHER.mul(2)});\n            ETHER.mul(100).add(ETHER.mul(2)).should.be.bignumber.equal(\n                await presaleContract.investorBalances(accounts[0])\n            )\n            ETHER.mul(100).add(ETHER.mul(2)).should.be.bignumber.equal(\n                await presaleContract.totalInvestedInWei()\n            )\n            preVaultBalance.add(ETHER.mul(100).add(ETHER.mul(2))).should.be.bignumber.equal(\n                await web3.eth.getBalance(vault)\n            )\n            await presaleContract.sendTransaction({value: ETHER.mul(40000-100-2).add(1)})\n            .should.be.rejectedWith(REVERT_MSG);",
                "err": {},
                "isRoot": false,
                "uuid": "bbe9b795-c947-479c-9dca-dd3e91ec214a",
                "parentUUID": "4d46b253-b02f-44a9-9a97-4cfc8142ea68",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 300000,
            "file": "/test/presale.js",
            "uuid": "4d46b253-b02f-44a9-9a97-4cfc8142ea68",
            "beforeHooks": [
              {
                "title": "\"before each\" hook",
                "fullTitle": "Contract: Presale #buy \"before each\" hook",
                "timedOut": false,
                "duration": 39,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "async \n            PRESALE_START_DATE = moment('2017-12-11T16:00:00Z').unix();\n            PRESALE_END_DATE = moment('2017-12-18T16:00:00Z').unix();\n            await presaleContract.initialize(PRESALE_START_DATE, PRESALE_END_DATE, ETHER.mul(40000), ETHER.mul(100), accounts[1], {from: accounts[0]})",
                "err": {},
                "isRoot": false,
                "uuid": "b1234f51-9d53-4143-9cf4-3ad538754d13",
                "parentUUID": "4d46b253-b02f-44a9-9a97-4cfc8142ea68",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "fullFile": "/home/travis/build/rstormsf/oracles-presale/test/presale.js",
            "passes": [
              {
                "title": "cannot buy if not whitelisted",
                "fullTitle": "Contract: Presale #buy cannot buy if not whitelisted",
                "timedOut": false,
                "duration": 16,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "async \n            // require(whitelist[msg.sender]);\n            await presaleContract.sendTransaction({amount: ETHER})\n            .should.be.rejectedWith(REVERT_MSG);",
                "err": {},
                "isRoot": false,
                "uuid": "a9e0c56b-8a73-4105-b3ca-c7da95f5bbbf",
                "parentUUID": "4d46b253-b02f-44a9-9a97-4cfc8142ea68",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "cannot buy if not value is 0",
                "fullTitle": "Contract: Presale #buy cannot buy if not value is 0",
                "timedOut": false,
                "duration": 40,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "async \n            // require(msg.value > 0);\n            await presaleContract.setTime(PRESALE_START_DATE);\n            await presaleContract.sendTransaction({value: 0})\n            .should.be.rejectedWith(REVERT_MSG);",
                "err": {},
                "isRoot": false,
                "uuid": "9b671b37-652e-4b9e-8ed3-40867c5f83bb",
                "parentUUID": "4d46b253-b02f-44a9-9a97-4cfc8142ea68",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "cannot buy if not value is less than minimum",
                "fullTitle": "Contract: Presale #buy cannot buy if not value is less than minimum",
                "timedOut": false,
                "duration": 51,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "async \n            // require(msg.value > 0);\n            await presaleContract.setTime(PRESALE_START_DATE);\n            await presaleContract.sendTransaction({value: ETHER.mul(99)})\n            .should.be.rejectedWith(REVERT_MSG);",
                "err": {},
                "isRoot": false,
                "uuid": "aff9c839-5822-4b07-8ba4-ab77bd196ce9",
                "parentUUID": "4d46b253-b02f-44a9-9a97-4cfc8142ea68",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "can not buy if time is not within startTime&endTime",
                "fullTitle": "Contract: Presale #buy can not buy if time is not within startTime&endTime",
                "timedOut": false,
                "duration": 107,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "async \n            // require(now >= startTime && now <= endTime);\n            await presaleContract.setTime(PRESALE_START_DATE - 1);\n            await presaleContract.sendTransaction({value: ETHER.mul(100)})\n            .should.be.rejectedWith(REVERT_MSG);\n            await presaleContract.setTime(PRESALE_END_DATE + 1);\n            await presaleContract.sendTransaction({value: ETHER.mul(100)})\n            .should.be.rejectedWith(REVERT_MSG);",
                "err": {},
                "isRoot": false,
                "uuid": "2d69ea6d-6c26-4f6d-a952-d6552d83a815",
                "parentUUID": "4d46b253-b02f-44a9-9a97-4cfc8142ea68",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "can not buy more than cap",
                "fullTitle": "Contract: Presale #buy can not buy more than cap",
                "timedOut": false,
                "duration": 52,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "async \n            // bool withinCap = totalInvestedInWei.add(msg.value) <= cap;\n            await presaleContract.setTime(PRESALE_START_DATE);\n            await presaleContract.sendTransaction({value: ETHER.mul(40000).add(1)})\n            .should.be.rejectedWith(REVERT_MSG);",
                "err": {},
                "isRoot": false,
                "uuid": "10d13d4e-9332-4d04-bc9b-9f63642dc6e4",
                "parentUUID": "4d46b253-b02f-44a9-9a97-4cfc8142ea68",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "happy path",
                "fullTitle": "Contract: Presale #buy happy path",
                "timedOut": false,
                "duration": 727,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "async \n            // investorBalances[investor] += msg.value;\n            // totalInvestedInWei += msg.value;\n            // forwardFunds(msg.value);\n            const vault = accounts[1];\n            const preVaultBalance = await web3.eth.getBalance(vault);\n            await presaleContract.setTime(PRESALE_START_DATE);\n            await presaleContract.whitelistInvestor(accounts[0]);            \n            await presaleContract.sendTransaction({value: ETHER.mul(100)});\n            ETHER.mul(100).should.be.bignumber.equal(\n                await presaleContract.investorBalances(accounts[0])\n            )\n            ETHER.mul(100).should.be.bignumber.equal(\n                await presaleContract.totalInvestedInWei()\n            )\n            preVaultBalance.add(ETHER.mul(100)).should.be.bignumber.equal(\n                await web3.eth.getBalance(vault)\n            )\n            await presaleContract.sendTransaction({value: ETHER.mul(2)});\n            ETHER.mul(100).add(ETHER.mul(2)).should.be.bignumber.equal(\n                await presaleContract.investorBalances(accounts[0])\n            )\n            ETHER.mul(100).add(ETHER.mul(2)).should.be.bignumber.equal(\n                await presaleContract.totalInvestedInWei()\n            )\n            preVaultBalance.add(ETHER.mul(100).add(ETHER.mul(2))).should.be.bignumber.equal(\n                await web3.eth.getBalance(vault)\n            )\n            await presaleContract.sendTransaction({value: ETHER.mul(40000-100-2).add(1)})\n            .should.be.rejectedWith(REVERT_MSG);",
                "err": {},
                "isRoot": false,
                "uuid": "bbe9b795-c947-479c-9dca-dd3e91ec214a",
                "parentUUID": "4d46b253-b02f-44a9-9a97-4cfc8142ea68",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasBeforeHooks": true,
            "hasAfterHooks": false,
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 6,
            "totalPasses": 6,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 993,
            "rootEmpty": false
          },
          {
            "title": "whitelisting capabilities",
            "suites": [
              {
                "title": "#whitelistInvestor",
                "suites": [],
                "tests": [
                  {
                    "title": "cannot by called by non-owner",
                    "fullTitle": "whitelisting capabilities #whitelistInvestor cannot by called by non-owner",
                    "timedOut": false,
                    "duration": 19,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "async \n                await presaleContract.whitelistInvestor(accounts[0], {from: accounts[1]})\n                    .should.be.rejectedWith(REVERT_MSG);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "09ad3929-d233-47ea-ac30-2ff53d1b9fcc",
                    "parentUUID": "48a4a54e-6d72-457b-bffb-e25c55932973",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "whitelists an investor",
                    "fullTitle": "whitelisting capabilities #whitelistInvestor whitelists an investor",
                    "timedOut": false,
                    "duration": 89,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "async \n                '0'.should.be.bignumber.equal(\n                    await presaleContract.investorsLength()\n                )\n                false.should.be.equal(\n                    await presaleContract.whitelist(accounts[0])\n                )\n                await presaleContract.whitelistInvestor(accounts[0]);\n                true.should.be.equal(\n                    await presaleContract.whitelist(accounts[0])\n                )\n                '1'.should.be.bignumber.equal(\n                    await presaleContract.investorsLength()\n                )",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7d4debcf-6218-44d0-8957-da71af6d70fe",
                    "parentUUID": "48a4a54e-6d72-457b-bffb-e25c55932973",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 300000,
                "file": "/test/presale.js",
                "uuid": "48a4a54e-6d72-457b-bffb-e25c55932973",
                "beforeHooks": [],
                "afterHooks": [],
                "fullFile": "/home/travis/build/rstormsf/oracles-presale/test/presale.js",
                "passes": [
                  {
                    "title": "cannot by called by non-owner",
                    "fullTitle": "whitelisting capabilities #whitelistInvestor cannot by called by non-owner",
                    "timedOut": false,
                    "duration": 19,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "async \n                await presaleContract.whitelistInvestor(accounts[0], {from: accounts[1]})\n                    .should.be.rejectedWith(REVERT_MSG);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "09ad3929-d233-47ea-ac30-2ff53d1b9fcc",
                    "parentUUID": "48a4a54e-6d72-457b-bffb-e25c55932973",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "whitelists an investor",
                    "fullTitle": "whitelisting capabilities #whitelistInvestor whitelists an investor",
                    "timedOut": false,
                    "duration": 89,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "async \n                '0'.should.be.bignumber.equal(\n                    await presaleContract.investorsLength()\n                )\n                false.should.be.equal(\n                    await presaleContract.whitelist(accounts[0])\n                )\n                await presaleContract.whitelistInvestor(accounts[0]);\n                true.should.be.equal(\n                    await presaleContract.whitelist(accounts[0])\n                )\n                '1'.should.be.bignumber.equal(\n                    await presaleContract.investorsLength()\n                )",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7d4debcf-6218-44d0-8957-da71af6d70fe",
                    "parentUUID": "48a4a54e-6d72-457b-bffb-e25c55932973",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasBeforeHooks": false,
                "hasAfterHooks": false,
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 108,
                "rootEmpty": false
              },
              {
                "title": "#whitelistInvestors",
                "suites": [],
                "tests": [
                  {
                    "title": "cannot by called by non-owner",
                    "fullTitle": "whitelisting capabilities #whitelistInvestors cannot by called by non-owner",
                    "timedOut": false,
                    "duration": 21,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "async \n                await presaleContract.whitelistInvestors([accounts[0]], {from: accounts[1]})\n                    .should.be.rejectedWith(REVERT_MSG);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "998ac0d8-1ee3-4eda-81b0-922aa015807a",
                    "parentUUID": "16410201-fc81-49b1-859d-bf630f61eaef",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "whitelists investors",
                    "fullTitle": "whitelisting capabilities #whitelistInvestors whitelists investors",
                    "timedOut": false,
                    "duration": 95,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "async \n                '0'.should.be.bignumber.equal(\n                    await presaleContract.investorsLength()\n                )\n                false.should.be.equal(\n                    await presaleContract.whitelist(accounts[0])\n                )\n                await presaleContract.whitelistInvestors([accounts[0], accounts[1], accounts[2]]);\n                true.should.be.equal(\n                    await presaleContract.whitelist(accounts[2])\n                )\n                '3'.should.be.bignumber.equal(\n                    await presaleContract.investorsLength()\n                )",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7fb1e1f2-90a4-4d6a-b6ef-053a76b0cdf8",
                    "parentUUID": "16410201-fc81-49b1-859d-bf630f61eaef",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 300000,
                "file": "/test/presale.js",
                "uuid": "16410201-fc81-49b1-859d-bf630f61eaef",
                "beforeHooks": [],
                "afterHooks": [],
                "fullFile": "/home/travis/build/rstormsf/oracles-presale/test/presale.js",
                "passes": [
                  {
                    "title": "cannot by called by non-owner",
                    "fullTitle": "whitelisting capabilities #whitelistInvestors cannot by called by non-owner",
                    "timedOut": false,
                    "duration": 21,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "async \n                await presaleContract.whitelistInvestors([accounts[0]], {from: accounts[1]})\n                    .should.be.rejectedWith(REVERT_MSG);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "998ac0d8-1ee3-4eda-81b0-922aa015807a",
                    "parentUUID": "16410201-fc81-49b1-859d-bf630f61eaef",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "whitelists investors",
                    "fullTitle": "whitelisting capabilities #whitelistInvestors whitelists investors",
                    "timedOut": false,
                    "duration": 95,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "async \n                '0'.should.be.bignumber.equal(\n                    await presaleContract.investorsLength()\n                )\n                false.should.be.equal(\n                    await presaleContract.whitelist(accounts[0])\n                )\n                await presaleContract.whitelistInvestors([accounts[0], accounts[1], accounts[2]]);\n                true.should.be.equal(\n                    await presaleContract.whitelist(accounts[2])\n                )\n                '3'.should.be.bignumber.equal(\n                    await presaleContract.investorsLength()\n                )",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7fb1e1f2-90a4-4d6a-b6ef-053a76b0cdf8",
                    "parentUUID": "16410201-fc81-49b1-859d-bf630f61eaef",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasBeforeHooks": false,
                "hasAfterHooks": false,
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 116,
                "rootEmpty": false
              },
              {
                "title": "#blacklistInvestor",
                "suites": [],
                "tests": [
                  {
                    "title": "cannot by called by non-owner",
                    "fullTitle": "whitelisting capabilities #blacklistInvestor cannot by called by non-owner",
                    "timedOut": false,
                    "duration": 28,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "async \n                await presaleContract.blacklistInvestor(accounts[0], {from: accounts[1]})\n                    .should.be.rejectedWith(REVERT_MSG);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a82122a1-9d60-4d92-b177-8273207b2864",
                    "parentUUID": "56b6fcf5-453d-4bb8-8a46-d7decbbc2e95",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "blacklist an investors",
                    "fullTitle": "whitelisting capabilities #blacklistInvestor blacklist an investors",
                    "timedOut": false,
                    "duration": 190,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "async \n                '0'.should.be.bignumber.equal(\n                    await presaleContract.investorsLength()\n                )\n                false.should.be.equal(\n                    await presaleContract.whitelist(accounts[0])\n                )\n                await presaleContract.whitelistInvestors([accounts[0], accounts[1], accounts[2]]);\n                true.should.be.equal(\n                    await presaleContract.whitelist(accounts[0])\n                )\n                '3'.should.be.bignumber.equal(\n                    await presaleContract.investorsLength()\n                )\n                await presaleContract.blacklistInvestor(accounts[0]);\n                false.should.be.equal(\n                    await presaleContract.whitelist(accounts[0])\n                )\n                '2'.should.be.bignumber.equal(\n                    await presaleContract.investorsLength()\n                )",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8740a843-f744-453a-a7d9-8c29b3d2a909",
                    "parentUUID": "56b6fcf5-453d-4bb8-8a46-d7decbbc2e95",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 300000,
                "file": "/test/presale.js",
                "uuid": "56b6fcf5-453d-4bb8-8a46-d7decbbc2e95",
                "beforeHooks": [],
                "afterHooks": [],
                "fullFile": "/home/travis/build/rstormsf/oracles-presale/test/presale.js",
                "passes": [
                  {
                    "title": "cannot by called by non-owner",
                    "fullTitle": "whitelisting capabilities #blacklistInvestor cannot by called by non-owner",
                    "timedOut": false,
                    "duration": 28,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "async \n                await presaleContract.blacklistInvestor(accounts[0], {from: accounts[1]})\n                    .should.be.rejectedWith(REVERT_MSG);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a82122a1-9d60-4d92-b177-8273207b2864",
                    "parentUUID": "56b6fcf5-453d-4bb8-8a46-d7decbbc2e95",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "blacklist an investors",
                    "fullTitle": "whitelisting capabilities #blacklistInvestor blacklist an investors",
                    "timedOut": false,
                    "duration": 190,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "async \n                '0'.should.be.bignumber.equal(\n                    await presaleContract.investorsLength()\n                )\n                false.should.be.equal(\n                    await presaleContract.whitelist(accounts[0])\n                )\n                await presaleContract.whitelistInvestors([accounts[0], accounts[1], accounts[2]]);\n                true.should.be.equal(\n                    await presaleContract.whitelist(accounts[0])\n                )\n                '3'.should.be.bignumber.equal(\n                    await presaleContract.investorsLength()\n                )\n                await presaleContract.blacklistInvestor(accounts[0]);\n                false.should.be.equal(\n                    await presaleContract.whitelist(accounts[0])\n                )\n                '2'.should.be.bignumber.equal(\n                    await presaleContract.investorsLength()\n                )",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8740a843-f744-453a-a7d9-8c29b3d2a909",
                    "parentUUID": "56b6fcf5-453d-4bb8-8a46-d7decbbc2e95",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasBeforeHooks": false,
                "hasAfterHooks": false,
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 218,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 300000,
            "file": "/test/presale.js",
            "uuid": "3c93eae8-a24c-4aeb-a3b9-59ea38ff1371",
            "beforeHooks": [],
            "afterHooks": [],
            "fullFile": "/home/travis/build/rstormsf/oracles-presale/test/presale.js",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasBeforeHooks": false,
            "hasAfterHooks": false,
            "hasTests": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          }
        ],
        "tests": [
          {
            "title": "constructor should set owner",
            "fullTitle": "Contract: Presale constructor should set owner",
            "timedOut": false,
            "duration": 36,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "async \n        accounts[0].should.be.equal(\n            await presaleContract.owner()\n        );",
            "err": {},
            "isRoot": false,
            "uuid": "a4bef919-96e7-402a-99d4-59d4ed1129e1",
            "parentUUID": "379c478d-8082-4d9e-9d01-8cac47e70a82",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "can not buy if not initialized",
            "fullTitle": "Contract: Presale can not buy if not initialized",
            "timedOut": false,
            "duration": 42,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "async \n        await presaleContract.sendTransaction({amount: ETHER})\n        .should.be.rejectedWith(REVERT_MSG);",
            "err": {},
            "isRoot": false,
            "uuid": "d7008a0d-31fa-4ba1-86c3-8de21ed87a1b",
            "parentUUID": "379c478d-8082-4d9e-9d01-8cac47e70a82",
            "isHook": false,
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 300000,
        "file": "/test/presale.js",
        "uuid": "379c478d-8082-4d9e-9d01-8cac47e70a82",
        "beforeHooks": [
          {
            "title": "\"before all\" hook: prepare suite",
            "fullTitle": "Contract: Presale \"before all\" hook: prepare suite",
            "timedOut": false,
            "duration": 23,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "this.timeout(runner.BEFORE_TIMEOUT);\nrunner.initialize(done);",
            "err": {},
            "isRoot": false,
            "uuid": "9a038a91-e6ef-436b-804a-f748ba873488",
            "parentUUID": "379c478d-8082-4d9e-9d01-8cac47e70a82",
            "isHook": true,
            "skipped": false
          },
          {
            "title": "\"before each\" hook: before test",
            "fullTitle": "Contract: Presale \"before each\" hook: before test",
            "timedOut": false,
            "duration": 2,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "runner.startTest(this, done);",
            "err": {},
            "isRoot": false,
            "uuid": "eb188696-d109-43d7-9dfe-52e108e9cc25",
            "parentUUID": "379c478d-8082-4d9e-9d01-8cac47e70a82",
            "isHook": true,
            "skipped": false
          },
          {
            "title": "\"before each\" hook",
            "fullTitle": "Contract: Presale \"before each\" hook",
            "timedOut": false,
            "duration": 39,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "async \n        presaleContract = await PresaleOracles.new();",
            "err": {},
            "isRoot": false,
            "uuid": "4e88ecea-05d7-4089-99a1-bea1608dd7db",
            "parentUUID": "379c478d-8082-4d9e-9d01-8cac47e70a82",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [
          {
            "title": "\"after each\" hook: after test",
            "fullTitle": "Contract: Presale \"after each\" hook: after test",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "runner.endTest(this, done);",
            "err": {},
            "isRoot": false,
            "uuid": "51050539-ceca-4c8f-b8fb-2275234d4dc1",
            "parentUUID": "379c478d-8082-4d9e-9d01-8cac47e70a82",
            "isHook": true,
            "skipped": false
          }
        ],
        "fullFile": "/home/travis/build/rstormsf/oracles-presale/test/presale.js",
        "passes": [
          {
            "title": "constructor should set owner",
            "fullTitle": "Contract: Presale constructor should set owner",
            "timedOut": false,
            "duration": 36,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "async \n        accounts[0].should.be.equal(\n            await presaleContract.owner()\n        );",
            "err": {},
            "isRoot": false,
            "uuid": "a4bef919-96e7-402a-99d4-59d4ed1129e1",
            "parentUUID": "379c478d-8082-4d9e-9d01-8cac47e70a82",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "can not buy if not initialized",
            "fullTitle": "Contract: Presale can not buy if not initialized",
            "timedOut": false,
            "duration": 42,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "async \n        await presaleContract.sendTransaction({amount: ETHER})\n        .should.be.rejectedWith(REVERT_MSG);",
            "err": {},
            "isRoot": false,
            "uuid": "d7008a0d-31fa-4ba1-86c3-8de21ed87a1b",
            "parentUUID": "379c478d-8082-4d9e-9d01-8cac47e70a82",
            "isHook": false,
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasBeforeHooks": true,
        "hasAfterHooks": true,
        "hasTests": true,
        "hasSuites": true,
        "totalTests": 2,
        "totalPasses": 2,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 78,
        "rootEmpty": false
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "591107b8-6459-4f2d-b63c-cba956127a4c",
    "beforeHooks": [],
    "afterHooks": [],
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasBeforeHooks": false,
    "hasAfterHooks": false,
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "constructor should set owner",
      "fullTitle": "Contract: Presale constructor should set owner",
      "timedOut": false,
      "duration": 36,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "async \n        accounts[0].should.be.equal(\n            await presaleContract.owner()\n        );",
      "err": {},
      "isRoot": false,
      "uuid": "a4bef919-96e7-402a-99d4-59d4ed1129e1",
      "parentUUID": "379c478d-8082-4d9e-9d01-8cac47e70a82",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "can not buy if not initialized",
      "fullTitle": "Contract: Presale can not buy if not initialized",
      "timedOut": false,
      "duration": 42,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "async \n        await presaleContract.sendTransaction({amount: ETHER})\n        .should.be.rejectedWith(REVERT_MSG);",
      "err": {},
      "isRoot": false,
      "uuid": "d7008a0d-31fa-4ba1-86c3-8de21ed87a1b",
      "parentUUID": "379c478d-8082-4d9e-9d01-8cac47e70a82",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "rejects if not sent by owner",
      "fullTitle": "#initilize rejects if not sent by owner",
      "timedOut": false,
      "duration": 37,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "async \n            await presaleContract.initialize(PRESALE_START_DATE, PRESALE_END_DATE, ETHER.mul(40000), ETHER.mul(100), accounts[1], {from: accounts[1]})\n                .should.be.rejectedWith(REVERT_MSG);",
      "err": {},
      "isRoot": false,
      "uuid": "a84dddec-cd4a-42be-b40d-5cac9a6312a5",
      "parentUUID": "43c23c6b-aaf2-4392-9598-99d200e064ab",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sets values",
      "fullTitle": "#initilize sets values",
      "timedOut": false,
      "duration": 166,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "async \n            await presaleContract.initialize(PRESALE_START_DATE, PRESALE_END_DATE, ETHER.mul(40000), ETHER.mul(100), accounts[1], {from: accounts[0]})\n            true.should.be.equal(\n                await presaleContract.isInitialized()\n            )\n            PRESALE_START_DATE.should.be.bignumber.equal(\n                await presaleContract.startTime()\n            )\n            PRESALE_END_DATE.should.be.bignumber.equal(\n                await presaleContract.endTime()\n            )\n            ETHER.mul(40000).should.be.bignumber.equal(\n                await presaleContract.cap()\n            )\n            accounts[1].should.be.equal(\n                await presaleContract.vault()\n            )\n            ETHER.mul(100).should.be.bignumber.equal(\n                await presaleContract.minimumContribution()\n            )",
      "err": {},
      "isRoot": false,
      "uuid": "f00eeed2-1aef-4cf6-80c6-404e4cb818ff",
      "parentUUID": "43c23c6b-aaf2-4392-9598-99d200e064ab",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "cannot initialize twice",
      "fullTitle": "#initilize cannot initialize twice",
      "timedOut": false,
      "duration": 85,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "async \n            // require(!isInitialized);\n            await presaleContract.initialize(PRESALE_START_DATE, PRESALE_END_DATE, ETHER.mul(40000), ETHER.mul(100), accounts[1], {from: accounts[0]})\n            await presaleContract.initialize(PRESALE_START_DATE, PRESALE_END_DATE, ETHER.mul(40000), ETHER.mul(100), accounts[1], {from: accounts[0]})\n                .should.be.rejectedWith(REVERT_MSG);",
      "err": {},
      "isRoot": false,
      "uuid": "4b102265-49b9-4e8d-a369-dad4d0e75084",
      "parentUUID": "43c23c6b-aaf2-4392-9598-99d200e064ab",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "startTime cannot be 0",
      "fullTitle": "#initilize startTime cannot be 0",
      "timedOut": false,
      "duration": 30,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "async \n            // require(_startTime != 0);\n            await presaleContract.initialize(0, PRESALE_END_DATE, ETHER.mul(40000), ETHER.mul(100), accounts[1], {from: accounts[1]})\n            .should.be.rejectedWith(REVERT_MSG);",
      "err": {},
      "isRoot": false,
      "uuid": "13e16b47-e389-4f83-8b32-45a3319690b6",
      "parentUUID": "43c23c6b-aaf2-4392-9598-99d200e064ab",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "endTime cannot be 0",
      "fullTitle": "#initilize endTime cannot be 0",
      "timedOut": false,
      "duration": 34,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "async \n            // require(_endTime != 0);\n            await presaleContract.initialize(PRESALE_START_DATE, 0, ETHER.mul(40000), ETHER.mul(100), accounts[1], {from: accounts[1]})\n            .should.be.rejectedWith(REVERT_MSG);",
      "err": {},
      "isRoot": false,
      "uuid": "f10d12ab-fe76-4242-921f-369ca36405f7",
      "parentUUID": "43c23c6b-aaf2-4392-9598-99d200e064ab",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "endTime cannot be less than startTime",
      "fullTitle": "#initilize endTime cannot be less than startTime",
      "timedOut": false,
      "duration": 22,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "async \n            // require(_endTime > _startTime);\n            await presaleContract.initialize(PRESALE_END_DATE, PRESALE_START_DATE, ETHER.mul(40000), ETHER.mul(100), accounts[1], {from: accounts[1]})\n            .should.be.rejectedWith(REVERT_MSG);",
      "err": {},
      "isRoot": false,
      "uuid": "28c814d5-52ad-4bc0-9aea-ccd00a294968",
      "parentUUID": "43c23c6b-aaf2-4392-9598-99d200e064ab",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "cap cannot be 0",
      "fullTitle": "#initilize cap cannot be 0",
      "timedOut": false,
      "duration": 25,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "async \n            // require(_cap != 0);\n            await presaleContract.initialize(PRESALE_START_DATE, PRESALE_END_DATE, 0, ETHER.mul(100), accounts[1], {from: accounts[1]})\n            .should.be.rejectedWith(REVERT_MSG);",
      "err": {},
      "isRoot": false,
      "uuid": "91c8f7b9-8e53-4667-80e5-abeeedfd2407",
      "parentUUID": "43c23c6b-aaf2-4392-9598-99d200e064ab",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "vault cannot be 0x0",
      "fullTitle": "#initilize vault cannot be 0x0",
      "timedOut": false,
      "duration": 31,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "async \n            // require(_vault != 0x0);\n            await presaleContract.initialize(PRESALE_START_DATE, PRESALE_END_DATE, ETHER.mul(40000), ETHER.mul(100), '0x0', {from: accounts[1]})\n            .should.be.rejectedWith(REVERT_MSG);",
      "err": {},
      "isRoot": false,
      "uuid": "4060402c-dffa-42a3-9003-88865a335102",
      "parentUUID": "43c23c6b-aaf2-4392-9598-99d200e064ab",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "minimumContribution cannot be 0",
      "fullTitle": "#initilize minimumContribution cannot be 0",
      "timedOut": false,
      "duration": 30,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "async \n            // require(_vault != 0x0);\n            await presaleContract.initialize(PRESALE_START_DATE, PRESALE_END_DATE, ETHER.mul(40000), 0, accounts[1], {from: accounts[1]})\n            .should.be.rejectedWith(REVERT_MSG);",
      "err": {},
      "isRoot": false,
      "uuid": "adb20fa6-83f6-47fb-b375-d28e3469eb7c",
      "parentUUID": "43c23c6b-aaf2-4392-9598-99d200e064ab",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "cannot buy if not whitelisted",
      "fullTitle": "#buy cannot buy if not whitelisted",
      "timedOut": false,
      "duration": 16,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "async \n            // require(whitelist[msg.sender]);\n            await presaleContract.sendTransaction({amount: ETHER})\n            .should.be.rejectedWith(REVERT_MSG);",
      "err": {},
      "isRoot": false,
      "uuid": "a9e0c56b-8a73-4105-b3ca-c7da95f5bbbf",
      "parentUUID": "4d46b253-b02f-44a9-9a97-4cfc8142ea68",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "cannot buy if not value is 0",
      "fullTitle": "#buy cannot buy if not value is 0",
      "timedOut": false,
      "duration": 40,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "async \n            // require(msg.value > 0);\n            await presaleContract.setTime(PRESALE_START_DATE);\n            await presaleContract.sendTransaction({value: 0})\n            .should.be.rejectedWith(REVERT_MSG);",
      "err": {},
      "isRoot": false,
      "uuid": "9b671b37-652e-4b9e-8ed3-40867c5f83bb",
      "parentUUID": "4d46b253-b02f-44a9-9a97-4cfc8142ea68",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "cannot buy if not value is less than minimum",
      "fullTitle": "#buy cannot buy if not value is less than minimum",
      "timedOut": false,
      "duration": 51,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "async \n            // require(msg.value > 0);\n            await presaleContract.setTime(PRESALE_START_DATE);\n            await presaleContract.sendTransaction({value: ETHER.mul(99)})\n            .should.be.rejectedWith(REVERT_MSG);",
      "err": {},
      "isRoot": false,
      "uuid": "aff9c839-5822-4b07-8ba4-ab77bd196ce9",
      "parentUUID": "4d46b253-b02f-44a9-9a97-4cfc8142ea68",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "can not buy if time is not within startTime&endTime",
      "fullTitle": "#buy can not buy if time is not within startTime&endTime",
      "timedOut": false,
      "duration": 107,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "async \n            // require(now >= startTime && now <= endTime);\n            await presaleContract.setTime(PRESALE_START_DATE - 1);\n            await presaleContract.sendTransaction({value: ETHER.mul(100)})\n            .should.be.rejectedWith(REVERT_MSG);\n            await presaleContract.setTime(PRESALE_END_DATE + 1);\n            await presaleContract.sendTransaction({value: ETHER.mul(100)})\n            .should.be.rejectedWith(REVERT_MSG);",
      "err": {},
      "isRoot": false,
      "uuid": "2d69ea6d-6c26-4f6d-a952-d6552d83a815",
      "parentUUID": "4d46b253-b02f-44a9-9a97-4cfc8142ea68",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "can not buy more than cap",
      "fullTitle": "#buy can not buy more than cap",
      "timedOut": false,
      "duration": 52,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "async \n            // bool withinCap = totalInvestedInWei.add(msg.value) <= cap;\n            await presaleContract.setTime(PRESALE_START_DATE);\n            await presaleContract.sendTransaction({value: ETHER.mul(40000).add(1)})\n            .should.be.rejectedWith(REVERT_MSG);",
      "err": {},
      "isRoot": false,
      "uuid": "10d13d4e-9332-4d04-bc9b-9f63642dc6e4",
      "parentUUID": "4d46b253-b02f-44a9-9a97-4cfc8142ea68",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "happy path",
      "fullTitle": "#buy happy path",
      "timedOut": false,
      "duration": 727,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "async \n            // investorBalances[investor] += msg.value;\n            // totalInvestedInWei += msg.value;\n            // forwardFunds(msg.value);\n            const vault = accounts[1];\n            const preVaultBalance = await web3.eth.getBalance(vault);\n            await presaleContract.setTime(PRESALE_START_DATE);\n            await presaleContract.whitelistInvestor(accounts[0]);            \n            await presaleContract.sendTransaction({value: ETHER.mul(100)});\n            ETHER.mul(100).should.be.bignumber.equal(\n                await presaleContract.investorBalances(accounts[0])\n            )\n            ETHER.mul(100).should.be.bignumber.equal(\n                await presaleContract.totalInvestedInWei()\n            )\n            preVaultBalance.add(ETHER.mul(100)).should.be.bignumber.equal(\n                await web3.eth.getBalance(vault)\n            )\n            await presaleContract.sendTransaction({value: ETHER.mul(2)});\n            ETHER.mul(100).add(ETHER.mul(2)).should.be.bignumber.equal(\n                await presaleContract.investorBalances(accounts[0])\n            )\n            ETHER.mul(100).add(ETHER.mul(2)).should.be.bignumber.equal(\n                await presaleContract.totalInvestedInWei()\n            )\n            preVaultBalance.add(ETHER.mul(100).add(ETHER.mul(2))).should.be.bignumber.equal(\n                await web3.eth.getBalance(vault)\n            )\n            await presaleContract.sendTransaction({value: ETHER.mul(40000-100-2).add(1)})\n            .should.be.rejectedWith(REVERT_MSG);",
      "err": {},
      "isRoot": false,
      "uuid": "bbe9b795-c947-479c-9dca-dd3e91ec214a",
      "parentUUID": "4d46b253-b02f-44a9-9a97-4cfc8142ea68",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "cannot by called by non-owner",
      "fullTitle": "#whitelistInvestor cannot by called by non-owner",
      "timedOut": false,
      "duration": 19,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "async \n                await presaleContract.whitelistInvestor(accounts[0], {from: accounts[1]})\n                    .should.be.rejectedWith(REVERT_MSG);",
      "err": {},
      "isRoot": false,
      "uuid": "09ad3929-d233-47ea-ac30-2ff53d1b9fcc",
      "parentUUID": "48a4a54e-6d72-457b-bffb-e25c55932973",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "whitelists an investor",
      "fullTitle": "#whitelistInvestor whitelists an investor",
      "timedOut": false,
      "duration": 89,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "async \n                '0'.should.be.bignumber.equal(\n                    await presaleContract.investorsLength()\n                )\n                false.should.be.equal(\n                    await presaleContract.whitelist(accounts[0])\n                )\n                await presaleContract.whitelistInvestor(accounts[0]);\n                true.should.be.equal(\n                    await presaleContract.whitelist(accounts[0])\n                )\n                '1'.should.be.bignumber.equal(\n                    await presaleContract.investorsLength()\n                )",
      "err": {},
      "isRoot": false,
      "uuid": "7d4debcf-6218-44d0-8957-da71af6d70fe",
      "parentUUID": "48a4a54e-6d72-457b-bffb-e25c55932973",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "cannot by called by non-owner",
      "fullTitle": "#whitelistInvestors cannot by called by non-owner",
      "timedOut": false,
      "duration": 21,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "async \n                await presaleContract.whitelistInvestors([accounts[0]], {from: accounts[1]})\n                    .should.be.rejectedWith(REVERT_MSG);",
      "err": {},
      "isRoot": false,
      "uuid": "998ac0d8-1ee3-4eda-81b0-922aa015807a",
      "parentUUID": "16410201-fc81-49b1-859d-bf630f61eaef",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "whitelists investors",
      "fullTitle": "#whitelistInvestors whitelists investors",
      "timedOut": false,
      "duration": 95,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "async \n                '0'.should.be.bignumber.equal(\n                    await presaleContract.investorsLength()\n                )\n                false.should.be.equal(\n                    await presaleContract.whitelist(accounts[0])\n                )\n                await presaleContract.whitelistInvestors([accounts[0], accounts[1], accounts[2]]);\n                true.should.be.equal(\n                    await presaleContract.whitelist(accounts[2])\n                )\n                '3'.should.be.bignumber.equal(\n                    await presaleContract.investorsLength()\n                )",
      "err": {},
      "isRoot": false,
      "uuid": "7fb1e1f2-90a4-4d6a-b6ef-053a76b0cdf8",
      "parentUUID": "16410201-fc81-49b1-859d-bf630f61eaef",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "cannot by called by non-owner",
      "fullTitle": "#blacklistInvestor cannot by called by non-owner",
      "timedOut": false,
      "duration": 28,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "async \n                await presaleContract.blacklistInvestor(accounts[0], {from: accounts[1]})\n                    .should.be.rejectedWith(REVERT_MSG);",
      "err": {},
      "isRoot": false,
      "uuid": "a82122a1-9d60-4d92-b177-8273207b2864",
      "parentUUID": "56b6fcf5-453d-4bb8-8a46-d7decbbc2e95",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "blacklist an investors",
      "fullTitle": "#blacklistInvestor blacklist an investors",
      "timedOut": false,
      "duration": 190,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "async \n                '0'.should.be.bignumber.equal(\n                    await presaleContract.investorsLength()\n                )\n                false.should.be.equal(\n                    await presaleContract.whitelist(accounts[0])\n                )\n                await presaleContract.whitelistInvestors([accounts[0], accounts[1], accounts[2]]);\n                true.should.be.equal(\n                    await presaleContract.whitelist(accounts[0])\n                )\n                '3'.should.be.bignumber.equal(\n                    await presaleContract.investorsLength()\n                )\n                await presaleContract.blacklistInvestor(accounts[0]);\n                false.should.be.equal(\n                    await presaleContract.whitelist(accounts[0])\n                )\n                '2'.should.be.bignumber.equal(\n                    await presaleContract.investorsLength()\n                )",
      "err": {},
      "isRoot": false,
      "uuid": "8740a843-f744-453a-a7d9-8c29b3d2a909",
      "parentUUID": "56b6fcf5-453d-4bb8-8a46-d7decbbc2e95",
      "isHook": false,
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "constructor should set owner",
      "fullTitle": "Contract: Presale constructor should set owner",
      "timedOut": false,
      "duration": 36,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "async \n        accounts[0].should.be.equal(\n            await presaleContract.owner()\n        );",
      "err": {},
      "isRoot": false,
      "uuid": "a4bef919-96e7-402a-99d4-59d4ed1129e1",
      "parentUUID": "379c478d-8082-4d9e-9d01-8cac47e70a82",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "can not buy if not initialized",
      "fullTitle": "Contract: Presale can not buy if not initialized",
      "timedOut": false,
      "duration": 42,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "async \n        await presaleContract.sendTransaction({amount: ETHER})\n        .should.be.rejectedWith(REVERT_MSG);",
      "err": {},
      "isRoot": false,
      "uuid": "d7008a0d-31fa-4ba1-86c3-8de21ed87a1b",
      "parentUUID": "379c478d-8082-4d9e-9d01-8cac47e70a82",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "rejects if not sent by owner",
      "fullTitle": "#initilize rejects if not sent by owner",
      "timedOut": false,
      "duration": 37,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "async \n            await presaleContract.initialize(PRESALE_START_DATE, PRESALE_END_DATE, ETHER.mul(40000), ETHER.mul(100), accounts[1], {from: accounts[1]})\n                .should.be.rejectedWith(REVERT_MSG);",
      "err": {},
      "isRoot": false,
      "uuid": "a84dddec-cd4a-42be-b40d-5cac9a6312a5",
      "parentUUID": "43c23c6b-aaf2-4392-9598-99d200e064ab",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sets values",
      "fullTitle": "#initilize sets values",
      "timedOut": false,
      "duration": 166,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "async \n            await presaleContract.initialize(PRESALE_START_DATE, PRESALE_END_DATE, ETHER.mul(40000), ETHER.mul(100), accounts[1], {from: accounts[0]})\n            true.should.be.equal(\n                await presaleContract.isInitialized()\n            )\n            PRESALE_START_DATE.should.be.bignumber.equal(\n                await presaleContract.startTime()\n            )\n            PRESALE_END_DATE.should.be.bignumber.equal(\n                await presaleContract.endTime()\n            )\n            ETHER.mul(40000).should.be.bignumber.equal(\n                await presaleContract.cap()\n            )\n            accounts[1].should.be.equal(\n                await presaleContract.vault()\n            )\n            ETHER.mul(100).should.be.bignumber.equal(\n                await presaleContract.minimumContribution()\n            )",
      "err": {},
      "isRoot": false,
      "uuid": "f00eeed2-1aef-4cf6-80c6-404e4cb818ff",
      "parentUUID": "43c23c6b-aaf2-4392-9598-99d200e064ab",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "cannot initialize twice",
      "fullTitle": "#initilize cannot initialize twice",
      "timedOut": false,
      "duration": 85,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "async \n            // require(!isInitialized);\n            await presaleContract.initialize(PRESALE_START_DATE, PRESALE_END_DATE, ETHER.mul(40000), ETHER.mul(100), accounts[1], {from: accounts[0]})\n            await presaleContract.initialize(PRESALE_START_DATE, PRESALE_END_DATE, ETHER.mul(40000), ETHER.mul(100), accounts[1], {from: accounts[0]})\n                .should.be.rejectedWith(REVERT_MSG);",
      "err": {},
      "isRoot": false,
      "uuid": "4b102265-49b9-4e8d-a369-dad4d0e75084",
      "parentUUID": "43c23c6b-aaf2-4392-9598-99d200e064ab",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "startTime cannot be 0",
      "fullTitle": "#initilize startTime cannot be 0",
      "timedOut": false,
      "duration": 30,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "async \n            // require(_startTime != 0);\n            await presaleContract.initialize(0, PRESALE_END_DATE, ETHER.mul(40000), ETHER.mul(100), accounts[1], {from: accounts[1]})\n            .should.be.rejectedWith(REVERT_MSG);",
      "err": {},
      "isRoot": false,
      "uuid": "13e16b47-e389-4f83-8b32-45a3319690b6",
      "parentUUID": "43c23c6b-aaf2-4392-9598-99d200e064ab",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "endTime cannot be 0",
      "fullTitle": "#initilize endTime cannot be 0",
      "timedOut": false,
      "duration": 34,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "async \n            // require(_endTime != 0);\n            await presaleContract.initialize(PRESALE_START_DATE, 0, ETHER.mul(40000), ETHER.mul(100), accounts[1], {from: accounts[1]})\n            .should.be.rejectedWith(REVERT_MSG);",
      "err": {},
      "isRoot": false,
      "uuid": "f10d12ab-fe76-4242-921f-369ca36405f7",
      "parentUUID": "43c23c6b-aaf2-4392-9598-99d200e064ab",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "endTime cannot be less than startTime",
      "fullTitle": "#initilize endTime cannot be less than startTime",
      "timedOut": false,
      "duration": 22,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "async \n            // require(_endTime > _startTime);\n            await presaleContract.initialize(PRESALE_END_DATE, PRESALE_START_DATE, ETHER.mul(40000), ETHER.mul(100), accounts[1], {from: accounts[1]})\n            .should.be.rejectedWith(REVERT_MSG);",
      "err": {},
      "isRoot": false,
      "uuid": "28c814d5-52ad-4bc0-9aea-ccd00a294968",
      "parentUUID": "43c23c6b-aaf2-4392-9598-99d200e064ab",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "cap cannot be 0",
      "fullTitle": "#initilize cap cannot be 0",
      "timedOut": false,
      "duration": 25,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "async \n            // require(_cap != 0);\n            await presaleContract.initialize(PRESALE_START_DATE, PRESALE_END_DATE, 0, ETHER.mul(100), accounts[1], {from: accounts[1]})\n            .should.be.rejectedWith(REVERT_MSG);",
      "err": {},
      "isRoot": false,
      "uuid": "91c8f7b9-8e53-4667-80e5-abeeedfd2407",
      "parentUUID": "43c23c6b-aaf2-4392-9598-99d200e064ab",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "vault cannot be 0x0",
      "fullTitle": "#initilize vault cannot be 0x0",
      "timedOut": false,
      "duration": 31,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "async \n            // require(_vault != 0x0);\n            await presaleContract.initialize(PRESALE_START_DATE, PRESALE_END_DATE, ETHER.mul(40000), ETHER.mul(100), '0x0', {from: accounts[1]})\n            .should.be.rejectedWith(REVERT_MSG);",
      "err": {},
      "isRoot": false,
      "uuid": "4060402c-dffa-42a3-9003-88865a335102",
      "parentUUID": "43c23c6b-aaf2-4392-9598-99d200e064ab",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "minimumContribution cannot be 0",
      "fullTitle": "#initilize minimumContribution cannot be 0",
      "timedOut": false,
      "duration": 30,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "async \n            // require(_vault != 0x0);\n            await presaleContract.initialize(PRESALE_START_DATE, PRESALE_END_DATE, ETHER.mul(40000), 0, accounts[1], {from: accounts[1]})\n            .should.be.rejectedWith(REVERT_MSG);",
      "err": {},
      "isRoot": false,
      "uuid": "adb20fa6-83f6-47fb-b375-d28e3469eb7c",
      "parentUUID": "43c23c6b-aaf2-4392-9598-99d200e064ab",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "cannot buy if not whitelisted",
      "fullTitle": "#buy cannot buy if not whitelisted",
      "timedOut": false,
      "duration": 16,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "async \n            // require(whitelist[msg.sender]);\n            await presaleContract.sendTransaction({amount: ETHER})\n            .should.be.rejectedWith(REVERT_MSG);",
      "err": {},
      "isRoot": false,
      "uuid": "a9e0c56b-8a73-4105-b3ca-c7da95f5bbbf",
      "parentUUID": "4d46b253-b02f-44a9-9a97-4cfc8142ea68",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "cannot buy if not value is 0",
      "fullTitle": "#buy cannot buy if not value is 0",
      "timedOut": false,
      "duration": 40,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "async \n            // require(msg.value > 0);\n            await presaleContract.setTime(PRESALE_START_DATE);\n            await presaleContract.sendTransaction({value: 0})\n            .should.be.rejectedWith(REVERT_MSG);",
      "err": {},
      "isRoot": false,
      "uuid": "9b671b37-652e-4b9e-8ed3-40867c5f83bb",
      "parentUUID": "4d46b253-b02f-44a9-9a97-4cfc8142ea68",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "cannot buy if not value is less than minimum",
      "fullTitle": "#buy cannot buy if not value is less than minimum",
      "timedOut": false,
      "duration": 51,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "async \n            // require(msg.value > 0);\n            await presaleContract.setTime(PRESALE_START_DATE);\n            await presaleContract.sendTransaction({value: ETHER.mul(99)})\n            .should.be.rejectedWith(REVERT_MSG);",
      "err": {},
      "isRoot": false,
      "uuid": "aff9c839-5822-4b07-8ba4-ab77bd196ce9",
      "parentUUID": "4d46b253-b02f-44a9-9a97-4cfc8142ea68",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "can not buy if time is not within startTime&endTime",
      "fullTitle": "#buy can not buy if time is not within startTime&endTime",
      "timedOut": false,
      "duration": 107,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "async \n            // require(now >= startTime && now <= endTime);\n            await presaleContract.setTime(PRESALE_START_DATE - 1);\n            await presaleContract.sendTransaction({value: ETHER.mul(100)})\n            .should.be.rejectedWith(REVERT_MSG);\n            await presaleContract.setTime(PRESALE_END_DATE + 1);\n            await presaleContract.sendTransaction({value: ETHER.mul(100)})\n            .should.be.rejectedWith(REVERT_MSG);",
      "err": {},
      "isRoot": false,
      "uuid": "2d69ea6d-6c26-4f6d-a952-d6552d83a815",
      "parentUUID": "4d46b253-b02f-44a9-9a97-4cfc8142ea68",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "can not buy more than cap",
      "fullTitle": "#buy can not buy more than cap",
      "timedOut": false,
      "duration": 52,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "async \n            // bool withinCap = totalInvestedInWei.add(msg.value) <= cap;\n            await presaleContract.setTime(PRESALE_START_DATE);\n            await presaleContract.sendTransaction({value: ETHER.mul(40000).add(1)})\n            .should.be.rejectedWith(REVERT_MSG);",
      "err": {},
      "isRoot": false,
      "uuid": "10d13d4e-9332-4d04-bc9b-9f63642dc6e4",
      "parentUUID": "4d46b253-b02f-44a9-9a97-4cfc8142ea68",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "happy path",
      "fullTitle": "#buy happy path",
      "timedOut": false,
      "duration": 727,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "async \n            // investorBalances[investor] += msg.value;\n            // totalInvestedInWei += msg.value;\n            // forwardFunds(msg.value);\n            const vault = accounts[1];\n            const preVaultBalance = await web3.eth.getBalance(vault);\n            await presaleContract.setTime(PRESALE_START_DATE);\n            await presaleContract.whitelistInvestor(accounts[0]);            \n            await presaleContract.sendTransaction({value: ETHER.mul(100)});\n            ETHER.mul(100).should.be.bignumber.equal(\n                await presaleContract.investorBalances(accounts[0])\n            )\n            ETHER.mul(100).should.be.bignumber.equal(\n                await presaleContract.totalInvestedInWei()\n            )\n            preVaultBalance.add(ETHER.mul(100)).should.be.bignumber.equal(\n                await web3.eth.getBalance(vault)\n            )\n            await presaleContract.sendTransaction({value: ETHER.mul(2)});\n            ETHER.mul(100).add(ETHER.mul(2)).should.be.bignumber.equal(\n                await presaleContract.investorBalances(accounts[0])\n            )\n            ETHER.mul(100).add(ETHER.mul(2)).should.be.bignumber.equal(\n                await presaleContract.totalInvestedInWei()\n            )\n            preVaultBalance.add(ETHER.mul(100).add(ETHER.mul(2))).should.be.bignumber.equal(\n                await web3.eth.getBalance(vault)\n            )\n            await presaleContract.sendTransaction({value: ETHER.mul(40000-100-2).add(1)})\n            .should.be.rejectedWith(REVERT_MSG);",
      "err": {},
      "isRoot": false,
      "uuid": "bbe9b795-c947-479c-9dca-dd3e91ec214a",
      "parentUUID": "4d46b253-b02f-44a9-9a97-4cfc8142ea68",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "cannot by called by non-owner",
      "fullTitle": "#whitelistInvestor cannot by called by non-owner",
      "timedOut": false,
      "duration": 19,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "async \n                await presaleContract.whitelistInvestor(accounts[0], {from: accounts[1]})\n                    .should.be.rejectedWith(REVERT_MSG);",
      "err": {},
      "isRoot": false,
      "uuid": "09ad3929-d233-47ea-ac30-2ff53d1b9fcc",
      "parentUUID": "48a4a54e-6d72-457b-bffb-e25c55932973",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "whitelists an investor",
      "fullTitle": "#whitelistInvestor whitelists an investor",
      "timedOut": false,
      "duration": 89,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "async \n                '0'.should.be.bignumber.equal(\n                    await presaleContract.investorsLength()\n                )\n                false.should.be.equal(\n                    await presaleContract.whitelist(accounts[0])\n                )\n                await presaleContract.whitelistInvestor(accounts[0]);\n                true.should.be.equal(\n                    await presaleContract.whitelist(accounts[0])\n                )\n                '1'.should.be.bignumber.equal(\n                    await presaleContract.investorsLength()\n                )",
      "err": {},
      "isRoot": false,
      "uuid": "7d4debcf-6218-44d0-8957-da71af6d70fe",
      "parentUUID": "48a4a54e-6d72-457b-bffb-e25c55932973",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "cannot by called by non-owner",
      "fullTitle": "#whitelistInvestors cannot by called by non-owner",
      "timedOut": false,
      "duration": 21,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "async \n                await presaleContract.whitelistInvestors([accounts[0]], {from: accounts[1]})\n                    .should.be.rejectedWith(REVERT_MSG);",
      "err": {},
      "isRoot": false,
      "uuid": "998ac0d8-1ee3-4eda-81b0-922aa015807a",
      "parentUUID": "16410201-fc81-49b1-859d-bf630f61eaef",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "whitelists investors",
      "fullTitle": "#whitelistInvestors whitelists investors",
      "timedOut": false,
      "duration": 95,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "async \n                '0'.should.be.bignumber.equal(\n                    await presaleContract.investorsLength()\n                )\n                false.should.be.equal(\n                    await presaleContract.whitelist(accounts[0])\n                )\n                await presaleContract.whitelistInvestors([accounts[0], accounts[1], accounts[2]]);\n                true.should.be.equal(\n                    await presaleContract.whitelist(accounts[2])\n                )\n                '3'.should.be.bignumber.equal(\n                    await presaleContract.investorsLength()\n                )",
      "err": {},
      "isRoot": false,
      "uuid": "7fb1e1f2-90a4-4d6a-b6ef-053a76b0cdf8",
      "parentUUID": "16410201-fc81-49b1-859d-bf630f61eaef",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "cannot by called by non-owner",
      "fullTitle": "#blacklistInvestor cannot by called by non-owner",
      "timedOut": false,
      "duration": 28,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "async \n                await presaleContract.blacklistInvestor(accounts[0], {from: accounts[1]})\n                    .should.be.rejectedWith(REVERT_MSG);",
      "err": {},
      "isRoot": false,
      "uuid": "a82122a1-9d60-4d92-b177-8273207b2864",
      "parentUUID": "56b6fcf5-453d-4bb8-8a46-d7decbbc2e95",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "blacklist an investors",
      "fullTitle": "#blacklistInvestor blacklist an investors",
      "timedOut": false,
      "duration": 190,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "async \n                '0'.should.be.bignumber.equal(\n                    await presaleContract.investorsLength()\n                )\n                false.should.be.equal(\n                    await presaleContract.whitelist(accounts[0])\n                )\n                await presaleContract.whitelistInvestors([accounts[0], accounts[1], accounts[2]]);\n                true.should.be.equal(\n                    await presaleContract.whitelist(accounts[0])\n                )\n                '3'.should.be.bignumber.equal(\n                    await presaleContract.investorsLength()\n                )\n                await presaleContract.blacklistInvestor(accounts[0]);\n                false.should.be.equal(\n                    await presaleContract.whitelist(accounts[0])\n                )\n                '2'.should.be.bignumber.equal(\n                    await presaleContract.investorsLength()\n                )",
      "err": {},
      "isRoot": false,
      "uuid": "8740a843-f744-453a-a7d9-8c29b3d2a909",
      "parentUUID": "56b6fcf5-453d-4bb8-8a46-d7decbbc2e95",
      "isHook": false,
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2018
}